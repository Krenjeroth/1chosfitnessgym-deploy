import{aL as v,aA as E,aC as y,aM as S,p as k,aE as A,aN as C,aH as l,aB as r}from"./CmAaC7-r.js";import{u as x}from"./B_gzkPqb.js";function p(e){return e.length>1&&e.slice(-1)==="/"?e.slice(0,-1):e}const T=()=>{const e=v(),o=E(),a=x(),t=y(),i=S(),s=k(()=>o.value!==null),f=A(C,()=>!1);async function h(){f.value||(f.value=!0,await u())}async function u(){o.value=await a(t.endpoints.user)}async function m(c){const n=l(),g=p(n.path);if(s.value){if(!t.redirectIfAuthenticated)throw new Error("User is already authenticated");if(t.redirect.onLogin===!1||t.redirect.onLogin===g)return;if(t.redirect.onLogin===void 0)throw new Error("`sanctum.redirect.onLogin` is not defined");await e.runWithContext(async()=>await r(t.redirect.onLogin))}if(t.endpoints.login===void 0)throw new Error("`sanctum.endpoints.login` is not defined");const w=await a(t.endpoints.login,{method:"post",body:c});if(t.mode==="token"){if(i.tokenStorage===void 0)throw new Error("`sanctum.tokenStorage` is not defined in app.config.ts");if(w.token===void 0)throw new Error("Token was not returned from the API");await i.tokenStorage.set(e,w.token)}if(await u(),t.redirect.keepRequestedRoute){const d=n.query.redirect;if(d&&d!==g){await e.runWithContext(async()=>await r(d));return}}if(!(t.redirect.onLogin===!1||n.path===t.redirect.onLogin)){if(t.redirect.onLogin===void 0)throw new Error("`sanctum.redirect.onLogin` is not defined");await e.runWithContext(async()=>await r(t.redirect.onLogin))}}async function L(){if(!s.value)throw new Error("User is not authenticated");const c=l(),n=p(c.path);if(t.endpoints.logout===void 0)throw new Error("`sanctum.endpoints.logout` is not defined");if(await a(t.endpoints.logout,{method:"post"}),o.value=null,t.mode==="token"){if(i.tokenStorage===void 0)throw new Error("`sanctum.tokenStorage` is not defined in app.config.ts");await i.tokenStorage.set(e,void 0)}if(!(t.redirect.onLogout===!1||n===t.redirect.onLogout)){if(t.redirect.onLogout===void 0)throw new Error("`sanctum.redirect.onLogout` is not defined");await e.runWithContext(async()=>await r(t.redirect.onLogout))}}return{user:o,isAuthenticated:s,init:h,login:m,logout:L,refreshIdentity:u}};export{p as t,T as u};
